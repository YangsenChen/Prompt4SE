{
  "repo": "jboss/jboss-common-core",
  "path": "src/main/java/org/jboss/util/xml/catalog/readers/XCatalogReader.java",
  "func_name": "XCatalogReader.startElement",
  "original_string": "public void startElement (String namespaceURI,\n\t\t\t    String localName,\n\t\t\t    String qName,\n\t\t\t    Attributes atts)\n    throws SAXException {\n\n    int entryType = -1;\n    Vector entryArgs = new Vector();\n\n    if (localName.equals(\"Base\")) {\n      entryType = catalog.BASE;\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Base\", atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Delegate\")) {\n      entryType = catalog.DELEGATE_PUBLIC;\n      entryArgs.add(atts.getValue(\"PublicId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Delegate\",\n\t\t    PublicId.normalize(atts.getValue(\"PublicId\")),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Extend\")) {\n      entryType = catalog.CATALOG;\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Extend\", atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Map\")) {\n      entryType = catalog.PUBLIC;\n      entryArgs.add(atts.getValue(\"PublicId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Map\",\n\t\t    PublicId.normalize(atts.getValue(\"PublicId\")),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Remap\")) {\n      entryType = catalog.SYSTEM;\n      entryArgs.add(atts.getValue(\"SystemId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Remap\",\n\t\t    atts.getValue(\"SystemId\"),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"XMLCatalog\")) {\n      // nop, start of catalog\n    } else {\n      // This is equivalent to an invalid catalog entry type\n      catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry type\", localName);\n    }\n\n    if (entryType >= 0) {\n      try {\n\tCatalogEntry ce = new CatalogEntry(entryType, entryArgs);\n\tcatalog.addEntry(ce);\n      } catch (CatalogException cex) {\n\tif (cex.getExceptionType() == CatalogException.INVALID_ENTRY_TYPE) {\n\t  catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry type\", localName);\n\t} else if (cex.getExceptionType() == CatalogException.INVALID_ENTRY) {\n\t  catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry\", localName);\n\t}\n      }\n    }\n    }",
  "language": "java",
  "code": "public void startElement (String namespaceURI,\n\t\t\t    String localName,\n\t\t\t    String qName,\n\t\t\t    Attributes atts)\n    throws SAXException {\n\n    int entryType = -1;\n    Vector entryArgs = new Vector();\n\n    if (localName.equals(\"Base\")) {\n      entryType = catalog.BASE;\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Base\", atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Delegate\")) {\n      entryType = catalog.DELEGATE_PUBLIC;\n      entryArgs.add(atts.getValue(\"PublicId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Delegate\",\n\t\t    PublicId.normalize(atts.getValue(\"PublicId\")),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Extend\")) {\n      entryType = catalog.CATALOG;\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Extend\", atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Map\")) {\n      entryType = catalog.PUBLIC;\n      entryArgs.add(atts.getValue(\"PublicId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Map\",\n\t\t    PublicId.normalize(atts.getValue(\"PublicId\")),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"Remap\")) {\n      entryType = catalog.SYSTEM;\n      entryArgs.add(atts.getValue(\"SystemId\"));\n      entryArgs.add(atts.getValue(\"HRef\"));\n\n      catalog.getCatalogManager().debug.message(4, \"Remap\",\n\t\t    atts.getValue(\"SystemId\"),\n\t\t    atts.getValue(\"HRef\"));\n    } else if (localName.equals(\"XMLCatalog\")) {\n      // nop, start of catalog\n    } else {\n      // This is equivalent to an invalid catalog entry type\n      catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry type\", localName);\n    }\n\n    if (entryType >= 0) {\n      try {\n\tCatalogEntry ce = new CatalogEntry(entryType, entryArgs);\n\tcatalog.addEntry(ce);\n      } catch (CatalogException cex) {\n\tif (cex.getExceptionType() == CatalogException.INVALID_ENTRY_TYPE) {\n\t  catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry type\", localName);\n\t} else if (cex.getExceptionType() == CatalogException.INVALID_ENTRY) {\n\t  catalog.getCatalogManager().debug.message(1, \"Invalid catalog entry\", localName);\n\t}\n      }\n    }\n    }",
  "code_tokens": [
    "public",
    "void",
    "startElement",
    "(",
    "String",
    "namespaceURI",
    ",",
    "String",
    "localName",
    ",",
    "String",
    "qName",
    ",",
    "Attributes",
    "atts",
    ")",
    "throws",
    "SAXException",
    "{",
    "int",
    "entryType",
    "=",
    "-",
    "1",
    ";",
    "Vector",
    "entryArgs",
    "=",
    "new",
    "Vector",
    "(",
    ")",
    ";",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"Base\"",
    ")",
    ")",
    "{",
    "entryType",
    "=",
    "catalog",
    ".",
    "BASE",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "4",
    ",",
    "\"Base\"",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"Delegate\"",
    ")",
    ")",
    "{",
    "entryType",
    "=",
    "catalog",
    ".",
    "DELEGATE_PUBLIC",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"PublicId\"",
    ")",
    ")",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "4",
    ",",
    "\"Delegate\"",
    ",",
    "PublicId",
    ".",
    "normalize",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"PublicId\"",
    ")",
    ")",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"Extend\"",
    ")",
    ")",
    "{",
    "entryType",
    "=",
    "catalog",
    ".",
    "CATALOG",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "4",
    ",",
    "\"Extend\"",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"Map\"",
    ")",
    ")",
    "{",
    "entryType",
    "=",
    "catalog",
    ".",
    "PUBLIC",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"PublicId\"",
    ")",
    ")",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "4",
    ",",
    "\"Map\"",
    ",",
    "PublicId",
    ".",
    "normalize",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"PublicId\"",
    ")",
    ")",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"Remap\"",
    ")",
    ")",
    "{",
    "entryType",
    "=",
    "catalog",
    ".",
    "SYSTEM",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"SystemId\"",
    ")",
    ")",
    ";",
    "entryArgs",
    ".",
    "add",
    "(",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "4",
    ",",
    "\"Remap\"",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"SystemId\"",
    ")",
    ",",
    "atts",
    ".",
    "getValue",
    "(",
    "\"HRef\"",
    ")",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "localName",
    ".",
    "equals",
    "(",
    "\"XMLCatalog\"",
    ")",
    ")",
    "{",
    "// nop, start of catalog",
    "}",
    "else",
    "{",
    "// This is equivalent to an invalid catalog entry type",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "1",
    ",",
    "\"Invalid catalog entry type\"",
    ",",
    "localName",
    ")",
    ";",
    "}",
    "if",
    "(",
    "entryType",
    ">=",
    "0",
    ")",
    "{",
    "try",
    "{",
    "CatalogEntry",
    "ce",
    "=",
    "new",
    "CatalogEntry",
    "(",
    "entryType",
    ",",
    "entryArgs",
    ")",
    ";",
    "catalog",
    ".",
    "addEntry",
    "(",
    "ce",
    ")",
    ";",
    "}",
    "catch",
    "(",
    "CatalogException",
    "cex",
    ")",
    "{",
    "if",
    "(",
    "cex",
    ".",
    "getExceptionType",
    "(",
    ")",
    "==",
    "CatalogException",
    ".",
    "INVALID_ENTRY_TYPE",
    ")",
    "{",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "1",
    ",",
    "\"Invalid catalog entry type\"",
    ",",
    "localName",
    ")",
    ";",
    "}",
    "else",
    "if",
    "(",
    "cex",
    ".",
    "getExceptionType",
    "(",
    ")",
    "==",
    "CatalogException",
    ".",
    "INVALID_ENTRY",
    ")",
    "{",
    "catalog",
    ".",
    "getCatalogManager",
    "(",
    ")",
    ".",
    "debug",
    ".",
    "message",
    "(",
    "1",
    ",",
    "\"Invalid catalog entry\"",
    ",",
    "localName",
    ")",
    ";",
    "}",
    "}",
    "}",
    "}"
  ],
  "docstring": "The SAX <code>startElement</code> method recognizes elements\nfrom the plain catalog format and instantiates CatalogEntry\nobjects for them.\n\n@param namespaceURI The namespace name of the element.\n@param localName The local name of the element.\n@param qName The QName of the element.\n@param atts The list of attributes on the element.\n\n@see CatalogEntry",
  "docstring_tokens": [
    "The",
    "SAX",
    "<code",
    ">",
    "startElement<",
    "/",
    "code",
    ">",
    "method",
    "recognizes",
    "elements",
    "from",
    "the",
    "plain",
    "catalog",
    "format",
    "and",
    "instantiates",
    "CatalogEntry",
    "objects",
    "for",
    "them",
    "."
  ],
  "sha": "c191bb18db83fa106c6913cf34ed47989b65dc97",
  "url": "https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/readers/XCatalogReader.java#L99-L161",
  "partition": "test"
}