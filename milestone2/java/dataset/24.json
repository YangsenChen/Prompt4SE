{
  "repo": "GojaFramework/goja",
  "path": "goja-rapid/src/main/java/goja/rapid/email/EMail.java",
  "func_name": "EMail.sendMessage",
  "original_string": "public static Future<Boolean> sendMessage(final Email msg) {\n        if (asynchronousSend) {\n            return executor.submit(new Callable<Boolean>() {\n\n                public Boolean call() {\n                    try {\n                        msg.setSentDate(new Date());\n                        msg.send();\n                        return true;\n                    } catch (Throwable e) {\n                        MailException me = new MailException(\"Error while sending email\", e);\n                        logger.error(\"The email has not been sent\", me);\n                        return false;\n                    }\n                }\n            });\n        } else {\n            final StringBuffer result = new StringBuffer();\n            try {\n                msg.setSentDate(new Date());\n                msg.send();\n            } catch (Throwable e) {\n                MailException me = new MailException(\"Error while sending email\", e);\n                logger.error(\"The email has not been sent\", me);\n                result.append(\"oops\");\n            }\n            return new Future<Boolean>() {\n\n                public boolean cancel(boolean mayInterruptIfRunning) {\n                    return false;\n                }\n\n                public boolean isCancelled() {\n                    return false;\n                }\n\n                public boolean isDone() {\n                    return true;\n                }\n\n                public Boolean get() throws InterruptedException, ExecutionException {\n                    return result.length() == 0;\n                }\n\n                public Boolean get(long timeout, TimeUnit unit)\n                        throws InterruptedException, ExecutionException, TimeoutException {\n                    return result.length() == 0;\n                }\n            };\n        }\n    }",
  "language": "java",
  "code": "public static Future<Boolean> sendMessage(final Email msg) {\n        if (asynchronousSend) {\n            return executor.submit(new Callable<Boolean>() {\n\n                public Boolean call() {\n                    try {\n                        msg.setSentDate(new Date());\n                        msg.send();\n                        return true;\n                    } catch (Throwable e) {\n                        MailException me = new MailException(\"Error while sending email\", e);\n                        logger.error(\"The email has not been sent\", me);\n                        return false;\n                    }\n                }\n            });\n        } else {\n            final StringBuffer result = new StringBuffer();\n            try {\n                msg.setSentDate(new Date());\n                msg.send();\n            } catch (Throwable e) {\n                MailException me = new MailException(\"Error while sending email\", e);\n                logger.error(\"The email has not been sent\", me);\n                result.append(\"oops\");\n            }\n            return new Future<Boolean>() {\n\n                public boolean cancel(boolean mayInterruptIfRunning) {\n                    return false;\n                }\n\n                public boolean isCancelled() {\n                    return false;\n                }\n\n                public boolean isDone() {\n                    return true;\n                }\n\n                public Boolean get() throws InterruptedException, ExecutionException {\n                    return result.length() == 0;\n                }\n\n                public Boolean get(long timeout, TimeUnit unit)\n                        throws InterruptedException, ExecutionException, TimeoutException {\n                    return result.length() == 0;\n                }\n            };\n        }\n    }",
  "code_tokens": [
    "public",
    "static",
    "Future",
    "<",
    "Boolean",
    ">",
    "sendMessage",
    "(",
    "final",
    "Email",
    "msg",
    ")",
    "{",
    "if",
    "(",
    "asynchronousSend",
    ")",
    "{",
    "return",
    "executor",
    ".",
    "submit",
    "(",
    "new",
    "Callable",
    "<",
    "Boolean",
    ">",
    "(",
    ")",
    "{",
    "public",
    "Boolean",
    "call",
    "(",
    ")",
    "{",
    "try",
    "{",
    "msg",
    ".",
    "setSentDate",
    "(",
    "new",
    "Date",
    "(",
    ")",
    ")",
    ";",
    "msg",
    ".",
    "send",
    "(",
    ")",
    ";",
    "return",
    "true",
    ";",
    "}",
    "catch",
    "(",
    "Throwable",
    "e",
    ")",
    "{",
    "MailException",
    "me",
    "=",
    "new",
    "MailException",
    "(",
    "\"Error while sending email\"",
    ",",
    "e",
    ")",
    ";",
    "logger",
    ".",
    "error",
    "(",
    "\"The email has not been sent\"",
    ",",
    "me",
    ")",
    ";",
    "return",
    "false",
    ";",
    "}",
    "}",
    "}",
    ")",
    ";",
    "}",
    "else",
    "{",
    "final",
    "StringBuffer",
    "result",
    "=",
    "new",
    "StringBuffer",
    "(",
    ")",
    ";",
    "try",
    "{",
    "msg",
    ".",
    "setSentDate",
    "(",
    "new",
    "Date",
    "(",
    ")",
    ")",
    ";",
    "msg",
    ".",
    "send",
    "(",
    ")",
    ";",
    "}",
    "catch",
    "(",
    "Throwable",
    "e",
    ")",
    "{",
    "MailException",
    "me",
    "=",
    "new",
    "MailException",
    "(",
    "\"Error while sending email\"",
    ",",
    "e",
    ")",
    ";",
    "logger",
    ".",
    "error",
    "(",
    "\"The email has not been sent\"",
    ",",
    "me",
    ")",
    ";",
    "result",
    ".",
    "append",
    "(",
    "\"oops\"",
    ")",
    ";",
    "}",
    "return",
    "new",
    "Future",
    "<",
    "Boolean",
    ">",
    "(",
    ")",
    "{",
    "public",
    "boolean",
    "cancel",
    "(",
    "boolean",
    "mayInterruptIfRunning",
    ")",
    "{",
    "return",
    "false",
    ";",
    "}",
    "public",
    "boolean",
    "isCancelled",
    "(",
    ")",
    "{",
    "return",
    "false",
    ";",
    "}",
    "public",
    "boolean",
    "isDone",
    "(",
    ")",
    "{",
    "return",
    "true",
    ";",
    "}",
    "public",
    "Boolean",
    "get",
    "(",
    ")",
    "throws",
    "InterruptedException",
    ",",
    "ExecutionException",
    "{",
    "return",
    "result",
    ".",
    "length",
    "(",
    ")",
    "==",
    "0",
    ";",
    "}",
    "public",
    "Boolean",
    "get",
    "(",
    "long",
    "timeout",
    ",",
    "TimeUnit",
    "unit",
    ")",
    "throws",
    "InterruptedException",
    ",",
    "ExecutionException",
    ",",
    "TimeoutException",
    "{",
    "return",
    "result",
    ".",
    "length",
    "(",
    ")",
    "==",
    "0",
    ";",
    "}",
    "}",
    ";",
    "}",
    "}"
  ],
  "docstring": "Send a JavaMail message\n\n@param msg An Email message",
  "docstring_tokens": [
    "Send",
    "a",
    "JavaMail",
    "message"
  ],
  "sha": "77179b495f668fc1fa20accc912991df6bb2d917",
  "url": "https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-rapid/src/main/java/goja/rapid/email/EMail.java#L198-L248",
  "partition": "test"
}