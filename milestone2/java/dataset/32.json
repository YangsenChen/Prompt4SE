{
  "repo": "orientechnologies/orientdb",
  "path": "object/src/main/java/com/orientechnologies/orient/object/jpa/parsing/PersistenceXmlUtil.java",
  "func_name": "PersistenceXmlUtil.parse",
  "original_string": "public static Collection<? extends PersistenceUnitInfo> parse(URL persistenceXml) {\n\n    InputStream is = null;\n    try {\n      // Buffer the InputStream so we can mark it, though we'll be in\n      // trouble if we have to read more than 8192 characters before finding\n      // the schema!\n      is = new BufferedInputStream(persistenceXml.openStream());\n\n      JPAVersion jpaVersion = getSchemaVersion(is);\n      Schema schema = getSchema(jpaVersion);\n\n      if (schema == null) {\n        throw new PersistenceException(\"Schema is unknown\");\n      }\n\n      // Get back to the beginning of the stream\n      is = new BufferedInputStream(persistenceXml.openStream());\n\n      parserFactory.setNamespaceAware(true);\n\n      int endIndex = persistenceXml.getPath().length() - PERSISTENCE_XML_BASE_NAME.length();\n      URL persistenceXmlRoot = new URL(\"file://\" + persistenceXml.getFile().substring(0, endIndex));\n\n      return getPersistenceUnits(is, persistenceXmlRoot, jpaVersion);\n    } catch (Exception e) {\n      throw new PersistenceException(\"Something goes wrong while parsing persistence.xml\", e);\n    } finally {\n      if (is != null)\n        try {\n          is.close();\n        } catch (IOException e) {\n          // No logging necessary, just consume\n        }\n    }\n  }",
  "language": "java",
  "code": "public static Collection<? extends PersistenceUnitInfo> parse(URL persistenceXml) {\n\n    InputStream is = null;\n    try {\n      // Buffer the InputStream so we can mark it, though we'll be in\n      // trouble if we have to read more than 8192 characters before finding\n      // the schema!\n      is = new BufferedInputStream(persistenceXml.openStream());\n\n      JPAVersion jpaVersion = getSchemaVersion(is);\n      Schema schema = getSchema(jpaVersion);\n\n      if (schema == null) {\n        throw new PersistenceException(\"Schema is unknown\");\n      }\n\n      // Get back to the beginning of the stream\n      is = new BufferedInputStream(persistenceXml.openStream());\n\n      parserFactory.setNamespaceAware(true);\n\n      int endIndex = persistenceXml.getPath().length() - PERSISTENCE_XML_BASE_NAME.length();\n      URL persistenceXmlRoot = new URL(\"file://\" + persistenceXml.getFile().substring(0, endIndex));\n\n      return getPersistenceUnits(is, persistenceXmlRoot, jpaVersion);\n    } catch (Exception e) {\n      throw new PersistenceException(\"Something goes wrong while parsing persistence.xml\", e);\n    } finally {\n      if (is != null)\n        try {\n          is.close();\n        } catch (IOException e) {\n          // No logging necessary, just consume\n        }\n    }\n  }",
  "code_tokens": [
    "public",
    "static",
    "Collection",
    "<",
    "?",
    "extends",
    "PersistenceUnitInfo",
    ">",
    "parse",
    "(",
    "URL",
    "persistenceXml",
    ")",
    "{",
    "InputStream",
    "is",
    "=",
    "null",
    ";",
    "try",
    "{",
    "// Buffer the InputStream so we can mark it, though we'll be in",
    "// trouble if we have to read more than 8192 characters before finding",
    "// the schema!",
    "is",
    "=",
    "new",
    "BufferedInputStream",
    "(",
    "persistenceXml",
    ".",
    "openStream",
    "(",
    ")",
    ")",
    ";",
    "JPAVersion",
    "jpaVersion",
    "=",
    "getSchemaVersion",
    "(",
    "is",
    ")",
    ";",
    "Schema",
    "schema",
    "=",
    "getSchema",
    "(",
    "jpaVersion",
    ")",
    ";",
    "if",
    "(",
    "schema",
    "==",
    "null",
    ")",
    "{",
    "throw",
    "new",
    "PersistenceException",
    "(",
    "\"Schema is unknown\"",
    ")",
    ";",
    "}",
    "// Get back to the beginning of the stream",
    "is",
    "=",
    "new",
    "BufferedInputStream",
    "(",
    "persistenceXml",
    ".",
    "openStream",
    "(",
    ")",
    ")",
    ";",
    "parserFactory",
    ".",
    "setNamespaceAware",
    "(",
    "true",
    ")",
    ";",
    "int",
    "endIndex",
    "=",
    "persistenceXml",
    ".",
    "getPath",
    "(",
    ")",
    ".",
    "length",
    "(",
    ")",
    "-",
    "PERSISTENCE_XML_BASE_NAME",
    ".",
    "length",
    "(",
    ")",
    ";",
    "URL",
    "persistenceXmlRoot",
    "=",
    "new",
    "URL",
    "(",
    "\"file://\"",
    "+",
    "persistenceXml",
    ".",
    "getFile",
    "(",
    ")",
    ".",
    "substring",
    "(",
    "0",
    ",",
    "endIndex",
    ")",
    ")",
    ";",
    "return",
    "getPersistenceUnits",
    "(",
    "is",
    ",",
    "persistenceXmlRoot",
    ",",
    "jpaVersion",
    ")",
    ";",
    "}",
    "catch",
    "(",
    "Exception",
    "e",
    ")",
    "{",
    "throw",
    "new",
    "PersistenceException",
    "(",
    "\"Something goes wrong while parsing persistence.xml\"",
    ",",
    "e",
    ")",
    ";",
    "}",
    "finally",
    "{",
    "if",
    "(",
    "is",
    "!=",
    "null",
    ")",
    "try",
    "{",
    "is",
    ".",
    "close",
    "(",
    ")",
    ";",
    "}",
    "catch",
    "(",
    "IOException",
    "e",
    ")",
    "{",
    "// No logging necessary, just consume",
    "}",
    "}",
    "}"
  ],
  "docstring": "Parse the persistence.xml files referenced by the URLs in the collection\n\n@param persistenceXml\n@return A collection of parsed persistence units.\n@throws IOException\n@throws SAXException\n@throws ParserConfigurationException",
  "docstring_tokens": [
    "Parse",
    "the",
    "persistence",
    ".",
    "xml",
    "files",
    "referenced",
    "by",
    "the",
    "URLs",
    "in",
    "the",
    "collection"
  ],
  "sha": "d970b12033f0462f0239ea0ad8ed41207e6e26f1",
  "url": "https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/object/src/main/java/com/orientechnologies/orient/object/jpa/parsing/PersistenceXmlUtil.java#L100-L135",
  "partition": "test"
}