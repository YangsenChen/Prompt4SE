{"repo": "google/gson", "path": "gson/src/main/java/com/google/gson/stream/JsonReader.java", "func_name": "JsonReader.nextNull", "original_string": "public void nextNull() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    if (p == PEEKED_NULL) {\n      peeked = PEEKED_NONE;\n      pathIndices[stackSize - 1]++;\n    } else {\n      throw new IllegalStateException(\"Expected null but was \" + peek() + locationString());\n    }\n  }", "language": "java", "code": "public void nextNull() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    if (p == PEEKED_NULL) {\n      peeked = PEEKED_NONE;\n      pathIndices[stackSize - 1]++;\n    } else {\n      throw new IllegalStateException(\"Expected null but was \" + peek() + locationString());\n    }\n  }", "code_tokens": ["public", "void", "nextNull", "(", ")", "throws", "IOException", "{", "int", "p", "=", "peeked", ";", "if", "(", "p", "==", "PEEKED_NONE", ")", "{", "p", "=", "doPeek", "(", ")", ";", "}", "if", "(", "p", "==", "PEEKED_NULL", ")", "{", "peeked", "=", "PEEKED_NONE", ";", "pathIndices", "[", "stackSize", "-", "1", "]", "++", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", "\"Expected null but was \"", "+", "peek", "(", ")", "+", "locationString", "(", ")", ")", ";", "}", "}"], "docstring": "Consumes the next token from the JSON stream and asserts that it is a\nliteral null.\n\n@throws IllegalStateException if the next token is not null or if this\nreader is closed.", "docstring_tokens": ["Consumes", "the", "next", "token", "from", "the", "JSON", "stream", "and", "asserts", "that", "it", "is", "a", "literal", "null", "."], "sha": "63ee47cb642c8018e5cddd639aa2be143220ad4b", "url": "https://github.com/google/gson/blob/63ee47cb642c8018e5cddd639aa2be143220ad4b/gson/src/main/java/com/google/gson/stream/JsonReader.java#L864-L875", "partition": "train"}
