{"repo": "google/gson", "path": "gson/src/main/java/com/google/gson/stream/JsonReader.java", "func_name": "JsonReader.peek", "original_string": "public JsonToken peek() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n\n    switch (p) {\n    case PEEKED_BEGIN_OBJECT:\n      return JsonToken.BEGIN_OBJECT;\n    case PEEKED_END_OBJECT:\n      return JsonToken.END_OBJECT;\n    case PEEKED_BEGIN_ARRAY:\n      return JsonToken.BEGIN_ARRAY;\n    case PEEKED_END_ARRAY:\n      return JsonToken.END_ARRAY;\n    case PEEKED_SINGLE_QUOTED_NAME:\n    case PEEKED_DOUBLE_QUOTED_NAME:\n    case PEEKED_UNQUOTED_NAME:\n      return JsonToken.NAME;\n    case PEEKED_TRUE:\n    case PEEKED_FALSE:\n      return JsonToken.BOOLEAN;\n    case PEEKED_NULL:\n      return JsonToken.NULL;\n    case PEEKED_SINGLE_QUOTED:\n    case PEEKED_DOUBLE_QUOTED:\n    case PEEKED_UNQUOTED:\n    case PEEKED_BUFFERED:\n      return JsonToken.STRING;\n    case PEEKED_LONG:\n    case PEEKED_NUMBER:\n      return JsonToken.NUMBER;\n    case PEEKED_EOF:\n      return JsonToken.END_DOCUMENT;\n    default:\n      throw new AssertionError();\n    }\n  }", "language": "java", "code": "public JsonToken peek() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n\n    switch (p) {\n    case PEEKED_BEGIN_OBJECT:\n      return JsonToken.BEGIN_OBJECT;\n    case PEEKED_END_OBJECT:\n      return JsonToken.END_OBJECT;\n    case PEEKED_BEGIN_ARRAY:\n      return JsonToken.BEGIN_ARRAY;\n    case PEEKED_END_ARRAY:\n      return JsonToken.END_ARRAY;\n    case PEEKED_SINGLE_QUOTED_NAME:\n    case PEEKED_DOUBLE_QUOTED_NAME:\n    case PEEKED_UNQUOTED_NAME:\n      return JsonToken.NAME;\n    case PEEKED_TRUE:\n    case PEEKED_FALSE:\n      return JsonToken.BOOLEAN;\n    case PEEKED_NULL:\n      return JsonToken.NULL;\n    case PEEKED_SINGLE_QUOTED:\n    case PEEKED_DOUBLE_QUOTED:\n    case PEEKED_UNQUOTED:\n    case PEEKED_BUFFERED:\n      return JsonToken.STRING;\n    case PEEKED_LONG:\n    case PEEKED_NUMBER:\n      return JsonToken.NUMBER;\n    case PEEKED_EOF:\n      return JsonToken.END_DOCUMENT;\n    default:\n      throw new AssertionError();\n    }\n  }", "code_tokens": ["public", "JsonToken", "peek", "(", ")", "throws", "IOException", "{", "int", "p", "=", "peeked", ";", "if", "(", "p", "==", "PEEKED_NONE", ")", "{", "p", "=", "doPeek", "(", ")", ";", "}", "switch", "(", "p", ")", "{", "case", "PEEKED_BEGIN_OBJECT", ":", "return", "JsonToken", ".", "BEGIN_OBJECT", ";", "case", "PEEKED_END_OBJECT", ":", "return", "JsonToken", ".", "END_OBJECT", ";", "case", "PEEKED_BEGIN_ARRAY", ":", "return", "JsonToken", ".", "BEGIN_ARRAY", ";", "case", "PEEKED_END_ARRAY", ":", "return", "JsonToken", ".", "END_ARRAY", ";", "case", "PEEKED_SINGLE_QUOTED_NAME", ":", "case", "PEEKED_DOUBLE_QUOTED_NAME", ":", "case", "PEEKED_UNQUOTED_NAME", ":", "return", "JsonToken", ".", "NAME", ";", "case", "PEEKED_TRUE", ":", "case", "PEEKED_FALSE", ":", "return", "JsonToken", ".", "BOOLEAN", ";", "case", "PEEKED_NULL", ":", "return", "JsonToken", ".", "NULL", ";", "case", "PEEKED_SINGLE_QUOTED", ":", "case", "PEEKED_DOUBLE_QUOTED", ":", "case", "PEEKED_UNQUOTED", ":", "case", "PEEKED_BUFFERED", ":", "return", "JsonToken", ".", "STRING", ";", "case", "PEEKED_LONG", ":", "case", "PEEKED_NUMBER", ":", "return", "JsonToken", ".", "NUMBER", ";", "case", "PEEKED_EOF", ":", "return", "JsonToken", ".", "END_DOCUMENT", ";", "default", ":", "throw", "new", "AssertionError", "(", ")", ";", "}", "}"], "docstring": "Returns the type of the next token without consuming it.", "docstring_tokens": ["Returns", "the", "type", "of", "the", "next", "token", "without", "consuming", "it", "."], "sha": "63ee47cb642c8018e5cddd639aa2be143220ad4b", "url": "https://github.com/google/gson/blob/63ee47cb642c8018e5cddd639aa2be143220ad4b/gson/src/main/java/com/google/gson/stream/JsonReader.java#L423-L460", "partition": "train"}
