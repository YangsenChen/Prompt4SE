{"repo": "google/gson", "path": "gson/src/main/java/com/google/gson/stream/JsonReader.java", "func_name": "JsonReader.nextName", "original_string": "public String nextName() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    String result;\n    if (p == PEEKED_UNQUOTED_NAME) {\n      result = nextUnquotedValue();\n    } else if (p == PEEKED_SINGLE_QUOTED_NAME) {\n      result = nextQuotedValue('\\'');\n    } else if (p == PEEKED_DOUBLE_QUOTED_NAME) {\n      result = nextQuotedValue('\"');\n    } else {\n      throw new IllegalStateException(\"Expected a name but was \" + peek() + locationString());\n    }\n    peeked = PEEKED_NONE;\n    pathNames[stackSize - 1] = result;\n    return result;\n  }", "language": "java", "code": "public String nextName() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    String result;\n    if (p == PEEKED_UNQUOTED_NAME) {\n      result = nextUnquotedValue();\n    } else if (p == PEEKED_SINGLE_QUOTED_NAME) {\n      result = nextQuotedValue('\\'');\n    } else if (p == PEEKED_DOUBLE_QUOTED_NAME) {\n      result = nextQuotedValue('\"');\n    } else {\n      throw new IllegalStateException(\"Expected a name but was \" + peek() + locationString());\n    }\n    peeked = PEEKED_NONE;\n    pathNames[stackSize - 1] = result;\n    return result;\n  }", "code_tokens": ["public", "String", "nextName", "(", ")", "throws", "IOException", "{", "int", "p", "=", "peeked", ";", "if", "(", "p", "==", "PEEKED_NONE", ")", "{", "p", "=", "doPeek", "(", ")", ";", "}", "String", "result", ";", "if", "(", "p", "==", "PEEKED_UNQUOTED_NAME", ")", "{", "result", "=", "nextUnquotedValue", "(", ")", ";", "}", "else", "if", "(", "p", "==", "PEEKED_SINGLE_QUOTED_NAME", ")", "{", "result", "=", "nextQuotedValue", "(", "'", "'", ")", ";", "}", "else", "if", "(", "p", "==", "PEEKED_DOUBLE_QUOTED_NAME", ")", "{", "result", "=", "nextQuotedValue", "(", "'", "'", ")", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", "\"Expected a name but was \"", "+", "peek", "(", ")", "+", "locationString", "(", ")", ")", ";", "}", "peeked", "=", "PEEKED_NONE", ";", "pathNames", "[", "stackSize", "-", "1", "]", "=", "result", ";", "return", "result", ";", "}"], "docstring": "Returns the next token, a {@link com.google.gson.stream.JsonToken#NAME property name}, and\nconsumes it.\n\n@throws java.io.IOException if the next token in the stream is not a property\nname.", "docstring_tokens": ["Returns", "the", "next", "token", "a", "{", "@link", "com", ".", "google", ".", "gson", ".", "stream", ".", "JsonToken#NAME", "property", "name", "}", "and", "consumes", "it", "."], "sha": "63ee47cb642c8018e5cddd639aa2be143220ad4b", "url": "https://github.com/google/gson/blob/63ee47cb642c8018e5cddd639aa2be143220ad4b/gson/src/main/java/com/google/gson/stream/JsonReader.java#L777-L795", "partition": "train"}
