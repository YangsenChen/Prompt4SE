digraph {
  compound=true;
  0[label="{ ... }"; ];
  1[label="var ...;"; ];
  2[label="new StringBuilder(...)"; ];
  3[label="result"; ];
  4[label="for (...;...;...)"; ];
  5[label="append(...)"; ];
  6[label="'$'"; ];
  7[label="0"; ];
  8[label="return ..."; ];
  9[label="getPath"; ];
  10[label="i"; ];
  11[label="i"; ];
  12[label="... < ..."; ];
  13[label="{ ... }"; ];
  14[label="result"; ];
  15[label="...++"; ];
  16[label="switch (...)"; ];
  17[label="stackSize"; ];
  18[label="i"; ];
  19[label="stack"; ];
  20[label="...[...]"; ];
  21[label="case ..."; ];
  22[label="case ..."; ];
  23[label="case ..."; ];
  24[label="case ..."; ];
  25[label="case ..."; ];
  26[label="case ..."; ];
  27[label="case ..."; ];
  28[label="case ..."; ];
  29[label="var ...;"; ];
  30[label="pathIndices"; ];
  31[label="pathIndex"; ];
  32[label="if (...)"; ];
  33[label="...[...]"; ];
  34[label="i"; ];
  35[label="... && ..."; ];
  36[label="<Expr>;"; ];
  37[label="result"; ];
  38[label="break"; ];
  39[label="<Expr>;"; ];
  40[label="result"; ];
  41[label="if (...)"; ];
  42[label="pathNames"; ];
  43[label="break"; ];
  44[label="break"; ];
  45[label="i"; ];
  46[label="... && ..."; ];
  47[label="{ ... }"; ];
  48[label="<Expr>;"; ];
  49[label="usePreviousPath"; ];
  50[label="... == ..."; ];
  51[label="pathIndex"; ];
  52[label="... > ..."; ];
  53[label="i"; ];
  54[label="0"; ];
  55[label="stackSize"; ];
  56[label="... - ..."; ];
  57[label="1"; ];
  58[label="pathIndex"; ];
  59[label="...--"; ];
  60[label="append(...)"; ];
  61[label="append(...)"; ];
  62[label="']'"; ];
  63[label="append(...)"; ];
  64[label="pathIndex"; ];
  65[label="'['"; ];
  66[label="append(...)"; ];
  67[label="'.'"; ];
  68[label="... != ..."; ];
  69[label="{ ... }"; ];
  70[label="<Expr>;"; ];
  71[label="...[...]"; ];
  72[label="null"; ];
  73[label="i"; ];
  74[label="result"; ];
  75[label="append(...)"; ];
  76[label="pathNames"; ];
  77[label="...[...]"; ];
  78[label="i"; ];
  79[label="toString(...)"; ];
  80[label="{ ... }"; ];
  81[label="false"; ];
  82[label="return ..."; ];
  83[label="getPath"; ];
  84[label="getPath(...)"; ];
  0 -> 1[];
  1 -> 2[];
  2 -> 6[];
  3 -> 4[];
  4 -> 7[];
  5 -> 3[];
  6 -> 5[];
  7 -> 10[];
  8 -> 9[];
  10 -> 11[];
  11 -> 17[];
  12 -> 13[];
  12 -> 14[];
  13 -> 16[];
  14 -> 79[];
  15 -> 11[];
  16 -> 19[];
  17 -> 12[];
  18 -> 15[];
  19 -> 45[];
  20 -> 18[];
  20 -> 21[];
  20 -> 22[];
  20 -> 23[];
  20 -> 24[];
  20 -> 25[];
  20 -> 26[];
  20 -> 27[];
  20 -> 28[];
  21 -> 22[];
  22 -> 29[];
  23 -> 24[];
  24 -> 25[];
  25 -> 39[];
  26 -> 27[];
  27 -> 28[];
  28 -> 44[];
  29 -> 30[];
  30 -> 34[];
  31 -> 32[];
  32 -> 35[];
  33 -> 31[];
  34 -> 33[];
  35 -> 46[];
  36 -> 37[];
  37 -> 65[];
  38 -> 18[];
  39 -> 40[];
  40 -> 67[];
  41 -> 42[];
  42 -> 73[];
  43 -> 18[];
  44 -> 18[];
  45 -> 20[];
  46 -> 49[];
  47 -> 48[];
  48 -> 58[];
  49 -> 36[];
  49 -> 51[];
  50 -> 36[];
  50 -> 47[];
  51 -> 54[];
  52 -> 36[];
  52 -> 53[];
  53 -> 55[];
  54 -> 52[];
  55 -> 57[];
  56 -> 50[];
  57 -> 56[];
  58 -> 59[];
  59 -> 36[];
  60 -> 38[];
  61 -> 62[];
  62 -> 60[];
  63 -> 64[];
  64 -> 61[];
  65 -> 63[];
  66 -> 41[];
  67 -> 66[];
  68 -> 43[];
  68 -> 69[];
  69 -> 70[];
  70 -> 74[];
  71 -> 72[];
  72 -> 68[];
  73 -> 71[];
  74 -> 76[];
  75 -> 43[];
  76 -> 78[];
  77 -> 75[];
  78 -> 77[];
  79 -> 8[];
  80 -> 81[];
  81 -> 84[];
  82 -> 83[];
  84 -> 82[];
}
