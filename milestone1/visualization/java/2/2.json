{"repo": "google/gson", "path": "gson/src/main/java/com/google/gson/stream/JsonReader.java", "func_name": "JsonReader.beginArray", "original_string": "public void beginArray() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    if (p == PEEKED_BEGIN_ARRAY) {\n      push(JsonScope.EMPTY_ARRAY);\n      pathIndices[stackSize - 1] = 0;\n      peeked = PEEKED_NONE;\n    } else {\n      throw new IllegalStateException(\"Expected BEGIN_ARRAY but was \" + peek() + locationString());\n    }\n  }", "language": "java", "code": "public void beginArray() throws IOException {\n    int p = peeked;\n    if (p == PEEKED_NONE) {\n      p = doPeek();\n    }\n    if (p == PEEKED_BEGIN_ARRAY) {\n      push(JsonScope.EMPTY_ARRAY);\n      pathIndices[stackSize - 1] = 0;\n      peeked = PEEKED_NONE;\n    } else {\n      throw new IllegalStateException(\"Expected BEGIN_ARRAY but was \" + peek() + locationString());\n    }\n  }", "code_tokens": ["public", "void", "beginArray", "(", ")", "throws", "IOException", "{", "int", "p", "=", "peeked", ";", "if", "(", "p", "==", "PEEKED_NONE", ")", "{", "p", "=", "doPeek", "(", ")", ";", "}", "if", "(", "p", "==", "PEEKED_BEGIN_ARRAY", ")", "{", "push", "(", "JsonScope", ".", "EMPTY_ARRAY", ")", ";", "pathIndices", "[", "stackSize", "-", "1", "]", "=", "0", ";", "peeked", "=", "PEEKED_NONE", ";", "}", "else", "{", "throw", "new", "IllegalStateException", "(", "\"Expected BEGIN_ARRAY but was \"", "+", "peek", "(", ")", "+", "locationString", "(", ")", ")", ";", "}", "}"], "docstring": "Consumes the next token from the JSON stream and asserts that it is the\nbeginning of a new array.", "docstring_tokens": ["Consumes", "the", "next", "token", "from", "the", "JSON", "stream", "and", "asserts", "that", "it", "is", "the", "beginning", "of", "a", "new", "array", "."], "sha": "63ee47cb642c8018e5cddd639aa2be143220ad4b", "url": "https://github.com/google/gson/blob/63ee47cb642c8018e5cddd639aa2be143220ad4b/gson/src/main/java/com/google/gson/stream/JsonReader.java#L341-L353", "partition": "train"}
